<?php

namespace App\Http\Requests;

use App\Models\User;
use App\Rules\AmountGreaterThanMinBidPrice;
use App\Rules\AmountGreaterThanTheLastOne;
use App\Rules\AuctionEnded;
use App\Rules\CanMakeBid;
use Illuminate\Foundation\Http\FormRequest;

class BidddingCreateRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'auction_id' => ['required', 'exists:auctions,id', new AuctionEnded(), new CanMakeBid()],
//            'amount_price' => ['required', new AmountGreaterThanTheLastOne($this->auction_id),new AmountGreaterThanMinBidPrice($this->auction_id)],
        ];
    }

    public function validated()
    {
        $data = [
            'client_id' => User::query()->clientType()->firstOr(fn() => User::factory()->create(['type' => 'client']))->id,
        ];
        return array_merge(parent::validated(),$data); // TODO: Change the autogenerated stub
    }
}
